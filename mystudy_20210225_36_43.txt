-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- MEMBERS Table Create SQL
CREATE TABLE MEMBERS
(
    id             VARCHAR2(30)    NOT NULL, 
    fc_password    VARCHAR2(30)    NOT NULL, 
    email          VARCHAR2(80)    NOT NULL, 
    photo          VARCHAR2(20)    NULL, 
    pw_answer      VARCHAR2(30)    NULL, 
    reg_date       DATE            NULL, 
    CONSTRAINT MEMBERS_PK PRIMARY KEY (id, email)
)
/

COMMENT ON TABLE MEMBERS IS '회원'
/

COMMENT ON COLUMN MEMBERS.id IS '아이디'
/

COMMENT ON COLUMN MEMBERS.fc_password IS '비밀번호'
/

COMMENT ON COLUMN MEMBERS.email IS '이메일'
/

COMMENT ON COLUMN MEMBERS.photo IS '사진'
/

COMMENT ON COLUMN MEMBERS.pw_answer IS '암호찾기 답'
/

COMMENT ON COLUMN MEMBERS.reg_date IS '가입일'
/


-- MEMBERS Table Create SQL
CREATE TABLE FIRST_BOARD
(
    ob_no         INT              NOT NULL, 
    ob_name       VARCHAR2(30)     NULL, 
    ob_pw         VARCHAR2(30)     NULL, 
    ob_content    CLOB             NOT NULL, 
    ob_date       DATE             NULL, 
    ob_img        VARCHAR2(100)    NULL, 
    CONSTRAINT FIRST_BOARD_PK PRIMARY KEY (ob_no)
)
/

CREATE SEQUENCE FIRST_BOARD_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FIRST_BOARD_AI_TRG
BEFORE INSERT ON FIRST_BOARD 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FIRST_BOARD_SEQ.NEXTVAL
    INTO :NEW.ob_no
    FROM DUAL;
END;
/

--DROP TRIGGER FIRST_BOARD_AI_TRG;
/

--DROP SEQUENCE FIRST_BOARD_SEQ;
/

COMMENT ON TABLE FIRST_BOARD IS '첫번째 게시판'
/

COMMENT ON COLUMN FIRST_BOARD.ob_no IS '게시물번호'
/

COMMENT ON COLUMN FIRST_BOARD.ob_name IS '작성자'
/

COMMENT ON COLUMN FIRST_BOARD.ob_pw IS '비밀번호'
/

COMMENT ON COLUMN FIRST_BOARD.ob_content IS '내용'
/

COMMENT ON COLUMN FIRST_BOARD.ob_date IS '작성일'
/

COMMENT ON COLUMN FIRST_BOARD.ob_img IS '이미지'
/


-- MEMBERS Table Create SQL
CREATE TABLE SECOND_BOARD
(
    tb_no         INT              NOT NULL, 
    tb_name       VARCHAR2(30)     NULL, 
    tb_pw         VARCHAR2(30)     NULL, 
    tb_content    CLOB             NOT NULL, 
    tb_date       DATE             NULL, 
    tb_img        VARCHAR2(100)    NULL, 
    CONSTRAINT SECOND_BOARD_PK PRIMARY KEY (tb_no)
)
/

CREATE SEQUENCE SECOND_BOARD_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER SECOND_BOARD_AI_TRG
BEFORE INSERT ON SECOND_BOARD 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT SECOND_BOARD_SEQ.NEXTVAL
    INTO :NEW.tb_no
    FROM DUAL;
END;
/

--DROP TRIGGER SECOND_BOARD_AI_TRG;
/

--DROP SEQUENCE SECOND_BOARD_SEQ;
/

COMMENT ON TABLE SECOND_BOARD IS '두번째 게시판'
/

COMMENT ON COLUMN SECOND_BOARD.tb_no IS '게시물번호'
/

COMMENT ON COLUMN SECOND_BOARD.tb_name IS '작성자'
/

COMMENT ON COLUMN SECOND_BOARD.tb_pw IS '비밀번호'
/

COMMENT ON COLUMN SECOND_BOARD.tb_content IS '내용'
/

COMMENT ON COLUMN SECOND_BOARD.tb_date IS '작성일'
/

COMMENT ON COLUMN SECOND_BOARD.tb_img IS '이미지'
/


-- MEMBERS Table Create SQL
CREATE TABLE FIRST_COMMENT
(
    fcomm_no       INT             NOT NULL, 
    name           VARCHAR2(30)    NULL, 
    fc_password    VARCHAR2(30)    NULL, 
    fc_content     CLOB            NOT NULL, 
    CONSTRAINT FIRST_COMMENT_PK PRIMARY KEY (fcomm_no)
)
/

CREATE SEQUENCE FIRST_COMMENT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER FIRST_COMMENT_AI_TRG
BEFORE INSERT ON FIRST_COMMENT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT FIRST_COMMENT_SEQ.NEXTVAL
    INTO :NEW.fcomm_no
    FROM DUAL;
END;
/

--DROP TRIGGER FIRST_COMMENT_AI_TRG;
/

--DROP SEQUENCE FIRST_COMMENT_SEQ;
/

COMMENT ON TABLE FIRST_COMMENT IS '첫번째 코멘트'
/

COMMENT ON COLUMN FIRST_COMMENT.fcomm_no IS '코멘트번호'
/

COMMENT ON COLUMN FIRST_COMMENT.name IS '작성자'
/

COMMENT ON COLUMN FIRST_COMMENT.fc_password IS '비밀번호'
/

COMMENT ON COLUMN FIRST_COMMENT.fc_content IS '내용'
/


-- MEMBERS Table Create SQL
CREATE TABLE SECOND_COMMENT
(
    scomm_no       INT             NOT NULL, 
    name           VARCHAR2(30)    NULL, 
    sc_password    VARCHAR2(30)    NULL, 
    sc_content     CLOB            NOT NULL, 
    CONSTRAINT SECOND_COMMENT_PK PRIMARY KEY (scomm_no)
)
/

CREATE SEQUENCE SECOND_COMMENT_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER SECOND_COMMENT_AI_TRG
BEFORE INSERT ON SECOND_COMMENT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT SECOND_COMMENT_SEQ.NEXTVAL
    INTO :NEW.scomm_no
    FROM DUAL;
END;
/

--DROP TRIGGER SECOND_COMMENT_AI_TRG;
/

--DROP SEQUENCE SECOND_COMMENT_SEQ;
/

COMMENT ON TABLE SECOND_COMMENT IS '두번째 코멘트'
/

COMMENT ON COLUMN SECOND_COMMENT.scomm_no IS '코멘트번호'
/

COMMENT ON COLUMN SECOND_COMMENT.name IS '작성자'
/

COMMENT ON COLUMN SECOND_COMMENT.sc_password IS '비밀번호'
/

COMMENT ON COLUMN SECOND_COMMENT.sc_content IS '내용'
/


-- MEMBERS Table Create SQL
CREATE TABLE NOTICE
(
    공지번호     INT              NOT NULL, 
    공지제목     VARCHAR2(80)     NOT NULL, 
    공지내용     CLOB             NOT NULL, 
    공지이미지    VARCHAR2(100)    NULL, 
    CONSTRAINT NOTICE_PK PRIMARY KEY (공지번호)
)
/

CREATE SEQUENCE NOTICE_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER NOTICE_AI_TRG
BEFORE INSERT ON NOTICE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT NOTICE_SEQ.NEXTVAL
    INTO :NEW.공지번호
    FROM DUAL;
END;
/

--DROP TRIGGER NOTICE_AI_TRG;
/

--DROP SEQUENCE NOTICE_SEQ;
/

COMMENT ON TABLE NOTICE IS '공지게시판'
/

COMMENT ON COLUMN NOTICE.공지번호 IS 'n_no'
/

COMMENT ON COLUMN NOTICE.공지제목 IS 'n_title'
/

COMMENT ON COLUMN NOTICE.공지내용 IS 'n_content'
/

COMMENT ON COLUMN NOTICE.공지이미지 IS 'n_img'
/


